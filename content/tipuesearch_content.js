var tipuesearch = {"pages": [{'title': 'Weeks', 'text': '分組網站: https://s40723227.github.io/cd2020bg3/content/Assignment.html \n Week1~Week5 \n Week6-Week9 \n Week10~Week14 \n Week15-Week18 \n', 'tags': '', 'url': 'Weeks.html'}, {'title': 'Week1~Week5', 'text': 'Week1 \n 建立個人倉儲cd2020及進行網站編譯 \n \n 1.下載 2019Fall可攜套件.7z \xa0 (編譯\xa0 Solvespace 用)，完成後開啟。 2.登入個人github帳號，創建新的倉儲cd2020。 3.進入要存放資料夾tmp。 4.輸入 git clone \xa0 https://github.com/s40723227/cd2020 \xa0複製 個人倉儲至資料夾 。 5.輸入git submodule add https://github.com/mdecourse/cmsimde.git 取得子模組資料。 6.將up_dir的所有項目複 製到cd2020 。 7.完成後，python wsgi.py 開始編輯倉儲(login密碼為 admin )。 8.編輯完成後，git status \xa0 -> \xa0 git add . \xa0 -> \xa0 git commit -m "XXX" \xa0 -> \xa0 git push。\xa0 \xa0 \n Week2 \n New pull request操作: 1.登入個人的github， fork 老師的倉儲 。 2.在個人倉儲中，找到fork的倉儲並複製網址。 3.輸入指令\xa0 git clone --recurse-submodules  fork的網址 ，將fork倉儲clone下來。 4.完成後，進入9443編輯網站。 5.完成編輯，接著git add .commit.push。 6.使用個人帳號下fork 倉儲，建立New pull request。 7.提交後等待老師接受並且merge即完成。 \n 重新創建python3.8.2隨身系統 \n \n 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data下新增資料夾py382及 wscite432、portablegit 。 2.進入 Python 官網。 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 4.滑至最底，找到 Windows x86-64 executable installer 並下載。 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 6.下載SciTE系統\xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n 7.建立新的start.bat及stop.bat。 \n start.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n \n \n \n @echo   off \n set   Disk = y \n subst  % Disk % :  "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set   HomePath = % Disk % :\\home \n set   HomeDrive = % Disk % :\\home \n set   Home = % Disk % :\\home \n set   USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set   PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set   PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set   PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set   path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set   path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set   path_git = % Disk % :\\portablegit\\ bin ; \n set   path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n \xa0 \xa0 \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n \n \n \n \n \n stop.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo   off \n set   Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill  / IM python.exe  / F \n taskkill  / IM pythonw.exe  / F \n taskkill  / IM scite.exe  / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst  % Disk % :  / D \n REM 關閉 cmd 指令視窗 \n taskkill  / IM cmd.exe  / F \n \xa0 \xa0 \n EXIT \n \n \n \n \n \n \n \n 8. 下載MSYS2\xa0 msys2-x86_64-20190524.exe \xa0至data下。 9. 下載PortableGit\xa0 64-bit Git for Windows Portable \xa0至\xa0 portablegit下。 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n \n \n \n \n \n \n 1 \n \n \n \n python get - pip.py \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 2 \n \n \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n \n \n \n 第三組第一次直播會議 \n 開會紀錄PDF: https://drive.google.com/openid=1R3UElFfUhid4D7hocedXO69w5lPEYi1M \n \n 作業一: 1.請描述如何針對該課程進行有效的隨機分組，或者隨機進行點名？ 2.描述如何為Windows 10 64位系統準備一個可移植的Python編程系統，以允許在Github上維護CMSiMDE網站，Pelican博客和js演示文稿？ 3.您需要從 http://www.coppeliarobotics.com/helpFiles/index.html 了解什麼來實現四輪機器人？ \n \n 工作分配表: \n \xa0 \n Week3 \n 翻譯 http://www.coppeliarobotics.com/helpFiles/index.htm 部分內容 \n 下載PDF連結: \n https://drive.google.com/open?id=1QQAyqm9VjunnozFMYdrV4K7ktpkjgVOu \n \n', 'tags': '', 'url': 'Week1~Week5.html'}, {'title': 'Week6~Week9', 'text': 'Week6 \n 第三組第二 次直播會議 \n 開會紀錄PDF連結: https://drive.google.com/open?id=1afrCAJJtArv94qnTK2zOsPor7WmpeaPH \n \n 作業二: \n \n 根據主題 0 和主題 1 的素材，您能否具體描述機械設計團隊為了完成作業 1 的四輪機器人需要做些什麼 ? \n 您需要從 https://cyberbotics.com/doc/guide/index 了解什麼來實現四輪機器人？ \n \n \n 工作分配表: \n \n \xa0Week7 \n 四輪車的基本外型設置與以鍵盤控制四輪車 \n 操作影片 \n 操作步驟: 1.首先點選Add->Primitive shape->Cuboid 建立四輪車的本體，給定尺寸並將車身拉高。 2.接著點選Add->Primitive shape->Cylinder 建立四輪車的輪胎，給定尺寸並調整其方向及位置。 3.再來點選Add->Joint->Relvoute 新增馬達給予輪胎動力，調整其方向及位置。 4.接著調整馬達轉動的速率20並將結構設置好。 5.檢查本體的碰撞設置是否正確。 6.複製其輪胎並將位置及結構設置好。 7.開始進行模擬測試。 8.將四輪車的前輪馬達重新命名為right_motor及left_motor。 9.接著將寫好的子程式加入車體。 10.進行測試以鍵盤控制四輪車，即完成。 程式碼連結: https://drive.google.com/open?id=1hPSwv9J4h3P6Fh80I1mSVD3lKTEKo19z\xa0 \n Week8 第八周第三組組員直播操作: https://drive.google.com/open?id=18yUMVYWPO1HelnDyV6UMkH06MjY79Vu7 \n Python remote api 環境配置 安裝模組: 1.pip install opencv-python 2.pip install imutils 3.pip install numpy \n 解決python 3.8.2版本leo閃退問題 1.輸入pip list，檢查leo版本是否為6.1版本(是的話即輸入pip uninstall leo 將此版本刪除) 2.接著輸入pip install leo==6.2.1指定leo 6.2.1版本，即可正常運作。 \n V-rep更新至最新版本 \n 官方網站: https://www.coppeliarobotics.com/ 可攜版: CoppeliaSim Edu, Binaries \n Week9 Week9期中考線上課程進行步驟: \n \n 老師與組長開會, 開放 live streaming, 回答與課程相關問題. \n 要求所有學員, 透過個人行事曆建立 Google Handout Meet 會議, 展示個人桌面操作, 開放 live stream, 並錄製至少 10 分鐘的個人期中簡報影片, 說明個人於 W1-W8 所完成的相關內容. \n 完成上述個人簡報錄製後, 將存於個人 Google Drive 中的期中簡報 mp4 影片, 以共享設置為所有登入 @gm 帳號的用戶都可以觀看. \n 完成上述影片共享設置後, 請登入 @gm 個人帳號, 至 \xa0 https://forms.gle/T1Vs4sv9EdetxoWF7 \xa0 填寫表單並完成期中個人自評成績登錄. \n 完成上述各步驟後, 將繼續進行線上課程之其他內容直播或錄影 \n \n 期中考報告連結: https://drive.google.com/openid=1s_BlIbVuZ5i3wZ_3MIf6KXO8b4En9LwS \n', 'tags': '', 'url': 'Week6~Week9.html'}, {'title': 'Week10~Week14', 'text': 'Week10 \n 第三次直播會議 \n 開會紀錄PDF連結: https://drive.google.com/open?id=1AP49O_JYqgqQNDzEz7Pxj-tzjugL8Bb2 \n \n 作業三 : 根據對 Topic2 和 Topic3 的閱讀，使用 CoppeliaSim 、 Webots 、 Onshap e 提出一個機電一體化項目。 \n 工作分配表: \n \n gm用戶登入設置 \n 操作影片: \n 操作步驟: 1.首先git clone cd2020pj1 倉儲 。 2.進入 Google API 。 3.點選建立專案。 4.輸入專案名稱，點選建立。 5.接著點選啟用API和服務，並點選Google+ Domains API。 6.點選啟用，並點選憑證及設定同意畫面。 7.再選擇內部，並點選建立。 8.輸入名稱，接著存儲並設定憑證。 9.點選建立憑證及OAuth用戶端ID。 10.選擇網路應用程式，接著建立。 11.將ID及密碼複製到編輯器，命名為oauth_s學號.txt 並存儲在tmp下。 12.接著設定來源及URL，點選新增URL並在授權JavaScriptipt來源下輸入https://localhost:8443及授權的重新定向URL輸入https://localhost:8443/login/google/，接著存儲。 13.開啟leo，並打開cd2020pj1.leo。 14.將路徑及名稱改為自己設定的。 15.完成後存儲，並點選ROC。 16.接著輸入pip install authomatic。 17.進入pj1，打開wsgi.py，即完成。 \n Week11 \n Ubuntu設定及API連線 \n 操作影片: 操作步驟: 1.下載 vitualbox 、 ubuntu 、 CoppeliaSim 四輪車控制器檔案。 2.開啟vitualbox，匯入ubuntu。 3.設定虛擬主機的網路埠號。[NET:設定->網路->附加到(A)改成NAT->進階->連接埠轉送->設定三個埠號(22、8443、19999)]。 4.設定完成後啟動ubuntu。 5.輸入密碼kmol2020，並開啟lxterminal。 6.輸入xterm&開啟，並使用ctrl+右鍵將視窗放大。 7.依照步驟打開coppeliasim，輸入ls查看內容。 8.cd coppeliasim4_rev4->ls->cd CoppeliaSim_Edu_v4_0_0_Ubuntu18_04->ls->./coppeliaSim.sh。 9.開啟後打開檔案sdc.ttt。 10.開啟啟動器，並開啟下載好的CoppeliaSim四輪車控制器檔案。 11.將檔案中的car_model.py放入編譯器中，並執行。 12.打開CoppeliaSim中的模擬，四輪車開始繞圈即成功。 \n 以ssh對Github連線 操作影片: 操作步驟: 1.到Y槽(Data)中的portablegit將sh_for_solvespace檔案複製並修改成sh.exe。 2.開啟start_mdecourse.bat並輸入sh及ssh-keygen -t rsa -b 4096 -C "使用者學號"產生key，打上key的產生區域。 3.下載 putty.7z SSH 連線工具組 ，利用其中的 puttygen.exe 將上述建立的 Openssh keys 轉為 putty 可以辨識的格式。 4.修改啟動的 start.bat 加入下列設定: \xa0 \xa0 \xa0 \xa0set GIT_HOME=%Disk%:\\portablegit\\bin\\ \xa0 \xa0 \xa0 \xa0set GIT_SSH=%Disk%:\\putty\\plink.exe 修改完成後,重新啟動。 5.將要使用 ssh 連線的倉儲 .git 中的 config 檔案中的 url 設定改為 ssh 連線格式:url = git@github.com:倉儲名稱/cad2019.git。 6.開啟 putty.exe 建立一個 session 名稱為 github.com, 其中指定 Connection -> Proxy 與 Connection -> SSH -> Auth。 7.將下列字串加入編輯器並存儲到y:\\home\\.ssh\\config: Host github.com \xa0 \xa0 User git \xa0 \xa0 Port 22 \xa0 \xa0 Hostname github.com \xa0 \xa0 TCPKeepAlive yes \xa0 \xa0 IdentitiesOnly yes 8.將所建立的OpenSSH格式的public key內容,送到Github帳號SSH settings中。 9.完成。 \n 第四次小組會議 Week12 \n IPv4 Ubuntu對外連線設定操作 \n 操作影片: 操作步驟: 1.點選檔案->喜好設定->網路->新增一個新的NAT網路。 2.編輯NAT網路->點選連接埠轉送->新增4個新的連接埠轉送埠號。 3.設定主機IP為 127.0.0.1 ；客體IP為 10.0.2.4 ；主機連接埠為 22、19999、17443、18443 ；客體連接埠為 22、19999、7443、8443 。 4.點選設定->網路->設定主機網路為NAT Network。 5.設定完後，點選啟動，接著輸入密碼 kmol2020 。 6.開啟LXTermial，輸入 ifconfig ->輸入 sudo apt install net-tools ->輸入密碼 kmol2020 。 7.cd tmp->ls->輸入ping 127.0.0.1測試->cd cd2020pj1->git pull。 8.接著輸入 sudo vi wsgi.py 編輯內容，按 i 進行編輯。 9.將近端的host改為 10.0.2.4 ，接著按 Esc 並輸入 :wq 存儲。 10.開啟leo，並開啟cd2020pj1.leo，點選Nav搜尋 allowExt 。 11.點選fileuploadfrom，並將第10行新增一個ttt檔，完成後存儲並關閉leo。 12.cd..,接著在tmp下新增oauth_scrum.txt，輸入 sudo vi oauth_scrum.txt 。 13.按 i 編輯，內容先隨便輸入，接著按 Esc 並輸入 :wq 存儲。 14.cd cd2020pj1，並輸入 python3 wsgi.py 啟動。 15.網址為 https:/127.0.0.1:18443/alogin 。 16.帳號及密碼都為 admin ，進入後點選fileuploadform，點選要上傳的ttt檔。 17.點選download list檢查檔案是否上傳完成。 18.完成。 Xming Xming\xa0是一個在\xa0Microsoft Windows\xa0作業系統上運行\xa0X Window System\xa0的自由軟體，其功能 是通過在 Linux 平台上通過交叉編譯 的方法，實現了跨越操作系统對X GUI的表現。 下載連結: https://sourceforge.net/projects/xming/ \n 第五次小組會議 \n W12抽點網站: http://mde.tw/cdbw12-3/ W12抽點倉儲: https://github.com/mdecourse/cdbw12-3 \n Week13 IPv4 遠端控制設定 操作影片: 操作步驟: 1.在搜尋輸入cmd開啟命令窗。 2.輸入ipconfig來查看IPv4的IP。 3.將虛擬主機的整體系統埠號中的主機IP改為個人IPv4的IP。 4.啟動Ubuntu並開啟XLaunch.exe。 5.另一台主機開啟putty，並輸入遠端連線的IP。 6.設定SSH下的X11，將Enable X11 fowarding打勾並在X display location中輸入localhost:0.0。 7.存儲後再啟動即可連線到該主機，帳號及密碼輸入kmol2020。 8.輸入xterm&，並進入cd2020pj1。 9.git pull檢查版本，在進入docs及cmsimde。 10.輸入vi wsgi.py編輯(按i編輯)。 11.將近端的host改為10.0.2.4。 12.按Esc並輸入:wq存儲。 13.輸入python3 wsgi.py，網址為該主機IP加上17443(https://主機IP:17443)。 14.完成。 \n IPv6 遠端控制設定 操作影片: 操作步驟: 1.從老師倉儲下的downloads打開w13_ipv6_assignment.txt，內有ipv6遠端控制說明。 2.依照說明設定，設定IPv6網路。 3.點選IPv6內容，IPv6位址輸入2001:288:6004:17:2020:2::7227(2為乙班、7227為乙班27號)。 4.子網路首碼長度輸入64、預設匝道輸入2001:288:6006:17::254。 5.接著開啟虛擬主機，設定整體系統埠號，將主機IP改為個人IP。 6.啟動Ubuntu輸入密碼kmol2020。 7.開啟LXTermial，並進入cd2020pj1。 8.git pull檢查有無新版本，cd docs/cmsimde。 9.輸入vi wsgi.py，將host改為個人主機IP(按i編輯，按Esc輸入:wq存儲)。 10.在另一台主機開啟putty，輸入預連線主機IP。 11.設定SSH下的X11(Enable X11 fowarding打勾並在X display location中輸入localhost:0.0)。 12.設定完成後存儲，在打開即可連線該主機。 13.輸入帳密kmol2020，打開XLaunch.exe並輸入xterm&啟動。 14.進入tmp/cd2020pj1/docs/cmsimde，輸入python3 wsgi.py開啟遠端。 15.網址為[該主機IP]:17443(必須關閉proxy)。 16.即完成遠端控制操作。 \n FileZilla 虛擬主機文件共享設定 操作影片: 操作步驟: 1.下載 FileZilla ，解縮到隨身系統中。 2.啟動Ubuntu主機，確認虛擬主機的整體系統埠號並開啟putty。 3.設定預連接IP為個人主機IP。 4.設定SSH中的X11，將Enable X11 fowarding打勾並在X display location中輸入localhost:0.0。 5.存儲後開啟，並輸入帳密kmol2020。 6.開啟FileZilla，點選檔案->站台管理員->新增站台個人主機IP。 7.將協定改為 SFTP-SSH，主機輸入個人主機IP及連接埠輸入22。 8.將登入型式改為詢問密碼、使用者命名為kmol2020。 9.設定完成後，點選連線，密碼輸入kmol2020。 10.即完成文件共享設定。 \n FileZilla FileZilla是一個免費開源的FTP軟件，分為客戶端版本和服務器版本，具備所有的FTP軟件功能。可控性、有條理的界面和管理多站點的簡化方式使得Filezilla客戶端版成為一個方便高效的FTP客戶端工具，而FileZilla Server則是一個小巧並且可靠的支持FTP&SFTP的FTP服務器軟件。 下載連結: https://portableapps.com/apps/internet/filezilla_portable \n W13抽點網站: http://mde.tw/cdbw13-1 W13抽點倉儲: https://github.com/mdecourse/cdbw13-1.git \n Week14 W14抽點網站: http://mde.tw/cdbw14-1 W14抽點倉儲: https://github.com/mdecourse/cdbw14-1.git', 'tags': '', 'url': 'Week10~Week14.html'}, {'title': 'Week15~Week18', 'text': 'Week15 W15抽點網站: http://mde.tw/cdbw15-3 W15抽點倉儲: https://github.com/mdecourse/cdbw15-3.git W eek16 IPv6對外連線個人倉儲 操作影片:', 'tags': '', 'url': 'Week15~Week18.html'}, {'title': 'Assignment', 'text': '\n', 'tags': '', 'url': 'Assignment.html'}, {'title': 'Assignment1', 'text': 'PDF檔連結: https://drive.google.com/open?id=17OPxqxjxZZ5O4yflej72x060fdII4zVc \n', 'tags': '', 'url': 'Assignment1.html'}, {'title': 'Random grouping', 'text': '', 'tags': '', 'url': 'Random grouping.html'}, {'title': 'Portable system', 'text': 'Describe how to prepare a portable Python programming system for Windows 10 64bit system to allow one the maintain CMSiMDE website, Pelican blog and Reveal.js presentation on Github? \n 重新創建python3.8.2隨身系統 \n 操作影片: \n \n 操作步驟: 1.在隨身系統下新增一個資料夾cd2020，並在cd2020下新建資料夾data，接著在data下新增資料夾py382及 wscite432、portablegit 。 2.進入 Python 官網。 3.點選Downloads下的 Windows ，並點選 Latest Python 3 Release - Python 3.8.2 。 4.滑至最底，找到 Windows x86-64 executable installer 並下載。 5.開始下載，必須將pip選項取消，接著按下next並將檔案下載至資料夾py382。 6.下載SciTE系統 \xa0 full 64-bit download ，下載完後解壓縮至data下的wscite432。 \n 7.建立新的start.bat及stop.bat。 start.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n \n \n \n @echo   off \n set   Disk = y \n subst  % Disk % :  "data" \n \xa0 \xa0 \n % Disk % : \n \xa0 \xa0 \n set   HomePath = % Disk % :\\home \n set   HomeDrive = % Disk % :\\home \n set   Home = % Disk % :\\home \n set   USERPROFILE = % Disk % :\\home \n \xa0 \xa0 \n REM 將系統 Python 程式的 io 設為 utf - 8 \n set   PYTHONIOENCODING = "utf-8" \n \xa0 \xa0 \n #REM for putty \n #Set GIT_HOME=%CDisk%:\\portablegit\\bin\\ \n #Set GIT_SSH=%Disk%:\\putty\\plink.exe \n \xa0 \xa0 \n set   PYTHONPATH = % Disk % :\\py382\\DLLs; % Disk % :\\py382\\Lib; % Disk % :\\py382\\Lib\\site - packages; \n set   PYTHONHOME = % Disk % :\\py382 \n \xa0 \xa0 \n set   path_python = % Disk % :\\py382; % Disk % :\\py382\\Scripts; \n set   path_msys2 = % Disk % :\\msys64\\mingw64\\ bin ; \n set   path_git = % Disk % :\\portablegit\\ bin ; \n set   path_tcc = % Disk % :\\tcc; \n \xa0 \xa0 \n path = % Disk % :; % path_python % ; % path_msys2 % ; % path_git % ; % path_tcc % ; \n \xa0 \xa0 \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n start  / MIN   cmd.exe \n \xa0 \xa0 \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n start  / MIN   % Disk % :\\wscite432\\wscite\\SciTE.exe \n \xa0 \xa0 \n Exit \n \n \n \n \n \n \n \n stop.bat: \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n \n \n \n @echo   off \n set   Disk = y \n path = % PATH % ; \n \xa0 \xa0 \n taskkill  / IM python.exe  / F \n taskkill  / IM pythonw.exe  / F \n taskkill  / IM scite.exe  / F \n \xa0 \xa0 \n REM 終止虛擬硬碟與目錄的對應 \n subst  % Disk % :  / D \n REM 關閉 cmd 指令視窗 \n taskkill  / IM cmd.exe  / F \n \xa0 \xa0 \n EXIT \n \n \n \n \n \n \n \n 8. 下載MSYS2 \xa0 msys2-x86_64-20190524.exe \xa0至data下。 9. 下載 PortableGit\xa0 64-bit Git for Windows Portable\xa0 至\xa0 portablegit下。 10 .安裝pip，到 https://bootstrap.pypa.io/get-pip.py 頁面，另存新檔到data下。 11.執行指令 ，將python3.8.2版本缺少的模組下載下來。 \n \n \n \n \n \n \n 1 \n \n \n \n python get - pip.py \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n 2 \n \n \n \n pip install flask bs4 lxml pelican markdown flask_cors leo \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Portable system.html'}, {'title': 'Four wheel car', 'text': 'What do you need to know from  http://www.coppeliarobotics.com/helpFiles/index.htm  to implement a fourwheeled robot?   部分內容翻譯概述:   Simulation & Simulation settings dialog :  \xa0 在任何機器製作完成後，都需要進行模擬測試，以確保機器能正常運作，或者測試機器的耐用性及安全性。在這兩章節主要說明了如何建立模擬，也教了如何調整模擬的速度，這能使我們模擬起來更有效率，接著就是模擬對話框的基本操作，其中也講解了在模擬過程可能會發生的狀況及解決方法，像是模擬速度調高或調慢，會造成不穩定或不準確的模擬，反之；還有因顯示卡的效能不足而造成模擬之屏幕刷新率太慢……等。   BubbleRob tutorial :  \xa0 此教程主要在教如何設置bubbleRob機器人，在上學期我們有實際操作過，其中的內容包含如何建立模型、設置感測器、調整視覺感測器，建立模型包含機器人本體、車輪、支撐滑塊、障礙物，不只是設置模型外型及尺寸，還要設置模型的物理屬性；設置感測器則是為了偵測障礙物，讓機器人能順利避開障礙物；視覺感測器則是為了能夠讓我們在機器人模擬時觀察機器人前方狀況。   Line following BubbleRob tutorial :  \xa0在此教程中，旨在擴展 BubbleRob 的功能，以使 BubbleRob 遵循地面上的規則，也就是調整視覺感測器並設置路徑及給定程式碼，使機器人能隨著路徑運作。   External controller tutorial :  \xa0 此教程說明好幾種方式能從外部控制機器人及模擬機器人，最方便的就是編寫程式碼直接附加到場景；另外還有利用編寫插件的方法，但此方法編寫程序更加複雜；第三種就是使用遠端API，此方法非常便捷也可以使用與運行真實機器人完全相同的程式碼來控制或模擬模型（例如虛擬機器人） : 第四種方法是通過ROS節點， ROS 與遠程 API 相似，是使多個分佈式進程相互連接的便捷方法；第五種是透過BlueZero（ BØ ）節點，與 ROS 類似， BlueZero 是使多個分佈式進程相互連接的一種便捷方法，並且是一種輕量級的跨平台解決方案。   總結 :   \xa0 最後要完成四輪機器人必須了解模擬程式的操作，包含模型的設置及各模型組合、各模型的物理特性設置、感測器設置、視覺感測器設置、外部控制器的選擇及設置、路徑程式碼設置，還有模擬時會發生的狀況處理，須達到這些基本的設置才能完成四輪機器人的設計。 \n', 'tags': '', 'url': 'Four wheel car.html'}, {'title': 'Assignment2', 'text': 'PDF檔連結: https://drive.google.com/open?id=17jSIkT6aVfdJNgnMjEeU5xTDtbZOdHww \n', 'tags': '', 'url': 'Assignment2.html'}, {'title': 'Topic 0', 'text': 'Topic 0: From Digital\xa0to Industrial + Engineering Product Design Collaboration \n DigitalProductCollaboration.pdf \n 本文主要講述如何透過協同設計出更好的產品，內容介紹什麼是協同、協同為什麼很重要、如何使用設計協同工具讓協同更有效率、合作流程。 \n \xa0 其中介紹的設計協同工具，包括 : \n FlGMA: \n Figma是一個以協作為優先的共享工作區工具，  Figma 非常適合多個人在設計文件的同一區域中進行產品設計，可以觀看隊友的設計或在同一個設計上一起工作。 \n MARVEL: \n Marvel是一個更簡潔、規範和專注的空間，非常適合與非設計團隊成員進行協 作，它消除了客戶為帳戶付款或對工具進行深入了解的所有需求，客戶可以下載屏幕，並通過 Marvel 應用程序在設備環境中查看它們的運行情況。 \n ZEPLIN: \n Zeplin是一種傳遞工具，使開發人員可以深入研究設計工作的細節。 \n QUIP: \n Quip是集思廣益在產品/流程文件的絕佳平台，可以使用它來記錄和組織團隊 成員在項目上需要了解的所有環境和知識，對於集思廣益新思路而不是視覺關 注的新想法也很有用。 \n \xa0 合作流程: \n 階段 1 ： 線框和自由討論，即先有產品的框架和讓設計師、工程師自由討論。 階段 2 ： 研究與背景，即延伸產品的框架去想如何設計產品及去思考市場商機與需求。 階段3： 迭代和反饋，即匯集設計師、工程師的想法，同時確保符合客戶的期望。 階段 4 ： 客戶的反饋和發展，即從客戶的反饋及意見，而將產品以此方向改良、發展。 \n 總結: 透過本文了解了什麼是協同、協同的重要性，以協同的方式去設計產品，會更加有效率、設計出來的產品更加優良，也藉由協同的方式發覺每個人的專長及技藝，最後必須通過正確的思維方式、工具和流程、設計協調才能達到協同的目的。 \n IndustrialAndEngineeringProductDesignCollaboration.pdf \n 本文主要講述工業設計師和工程設計師如何協作，以及如何將這種合作體現在設計過程中。其中有四種類型的典型協同產品設計流程及其特徵: \n 類型 1 ： 由工業設計師主導的概念驅動過程。 類型 2 ： 由 工業設計師主導的內外聯合過程。 類型 3 ： 由工程設計師主導的由內到外的流程。 類型 4 ： 工業設計師與工程設計師協同流程。 \n \n 總結 :從本文中藉由深入採訪6個產品的34名工業設計師及工程設計師，而取得各種協同合作所需的數據，再經由這些數據設計出流程，讓整個設計流程可以更有效率。 \n', 'tags': '', 'url': 'Topic 0.html'}, {'title': 'Topic 1', 'text': 'MechanicalDesignProcess.pdf . \n Ch1  成功的設計: \n 第一章主要講述如何做出一項成功的設計，在要進行設計時必須先組成團隊，依設計的產品而決定團隊大小、產品所需的工程，接著依產品要求提出分析資料、市場調查，然後再依分析資料進行產品的設計草會與細節的調整，最後進行討論、溝通，以及最後的工程經濟分析。 \n Ch2  構建設計: \n 第二章主要講述設計產品的流程及要素，設計通常會從產品構思開始，設計方向分為三種 :  1.全新的設計 2. 延續（或增加）現有設計 3. 現有設計的重大修改，決定好方向後必須構思草圖，然後審查想法並授權進行原型製作，接著繪製（文件創建）原型製造的設想方案，再來進行原型分析、測試原型是否符合規範，再提出修訂，進行更改以改進原型（工程圖和原型），接著在進一步的分析與測試，進行第二次的修訂，最後文件製作  / 最終測試 / 最終審查 / 正式批准生產發布的設計，這些就是設計產品的流程。 然而，設計產品所需要注意的要素有最佳對象放置、間隙距離、對象排列，最佳對象放置是指可以將大多數設計視為物體在空間中的物理放置，而放置的位置是否能發揮此物體最佳功用、是否安全；間隙距離是指物體與物體之間的距離，通常依產品所需的公差進行設計；對象排列是指通過生產排列所有適合安裝在外殼中的物體的方式來最大程度地減小外殼的整體尺寸。 \n Ch3  考量結構問題: \n 第三章主要講述產品的結構問題，主要分為材料強度、結構設計過程、需求分析、靜載荷、動態負載進而討論，在設計產品時必須考量結構的問題，必須先了解產品所需的強度而去挑選適合的材料，接著必須分析材料、產品的應力、產品的扭矩、產品所受的靜載荷，其中靜載荷的問題考量非常重要，靜載荷的產生主要由 :1. 構件的體重 2. 其他成員施加的載荷 3. 由於熱效應，殘餘應力等引起的負載 而引起，靜載荷會通過施加力而導致構件失效，從而導致 :  1.超過材料的屈服強度  2. 構件的過度偏轉導致構件撓曲。 \n Ch4  材料與工藝: \n 第四章主要講述產品所需的最佳材料與工藝，產品若已經符合規格的要求，接著就必須考慮到設計的成本，再經由這些成本分析而去決定產品所用的材料與工藝，成本分析的項目包括 :  零件的材料、零件需要的表面處理、零件所需的尺寸精度、生產零件的過程、零件所需的數量、零件需要的第二次操作、零件的成本要求、該零件是否可以與設計中的另一零件組合、零件是否可做成對稱的（為了便於組裝）。而材料的選擇又分為 :  強度要求、重量要求、可靠性要求、法規要求、安全要求、熱要求、屏蔽要求（ EMI/RFI ）、金屬的兼容性要求（電腐蝕）、彈性要求（硬度計）、導電（或絕緣）要求、不透明要求、磨損要求、美學要求（觸覺、視覺）、聲學要求、紫外線（ UV ）透射和阻力要求。這些就是依產品品質與成本所需分析的項目，在進而決定需要使用到哪些工藝。 \n', 'tags': '', 'url': 'Topic 1.html'}, {'title': 'Assignment3', 'text': 'PDF檔連結 : https://drive.google.com/open?id=1MHOYaFn9Du7UnhU9cJ0GqIthIQQSc4t4 \n', 'tags': '', 'url': 'Assignment3.html'}, {'title': 'Topic2', 'text': 'MSModelingAndTFApproaches \n 概述: 此書主要介紹機電一體化系統的結構和不同組件，以及機電一體化過程中所遇到的問題，主要分為五個章節講述 : 1.介紹。 2.機電一體化系統。 3.數學建模。 4.基於傳遞函數的分析。 5.基於傳遞函數的設計。 \xa0 \xa0此書重於分析、設計和實現由微控制器的連續時間系統；在建模的部分，使用傳遞函數或空間狀態來表示系統的模型；在傳遞函數方法的部分，將連續時間系統的模型轉換為離散時間在空間狀態逼近的部分，並採用不同的技術進行分析及綜合；實施的部分，則是介紹如何實現在傳遞函數或基於時間狀態的控制中開發控制演算法。 \n 1.介紹: 此章節主要講述機電一體化所需的零件設計，主要分為兩大類 :(1) 機械零件設計 (2) 電子電路零件設計。 (1)機械零件設計: 機械是機電系統中的基本部分，在此部分的階段設計中，將構思和製造組成機電一體化系統，而將用於此機電一體化系統的執行器和傳感器。對於機械零件的設計，使用了機械設計的步驟，例如問題的定義，使用集思廣益或任何等效方法進行的解決方案研究、實用性研究、原型設計等。執行器和傳感器的選擇也必須遵循所使用的準則和規範。 (2)電子電路零件設計: 如此書 MechatronicDesignCases 所介紹。 \n 2.機電一體化系統: 此章節主要講述機電一體化系統設計的兩種方法，第一種方法是先進行機械設計，在獲得滿意的機械設計後，在進行電子系統的設，最後在設計控制系統；而第二種方法則是在機械、電子和控制系統設計的同時，考慮每個系統的設計及對其他兩個系統的影響。第二種設計方法主要優點為可以對每個系統進行最佳設計，從而實現最佳整體的性能。 \n 3.數學建模: 數學建模是一種使用數學語言 ( 微分方程式或差分方程式 ) 來描述動力學系統行為的表示，以描述輸入與輸出的動態系統參數之間的關係，動態系統的數學建模主要以取決於如何處理時間變量分為兩種 :(1) 連續時間數學建模 (2) 離散時間數學建模。 (1)連續時間數學建模: 為基於一組對時間變量的任何值均有效的微分方程組。 (2)離散時間數學建模: 為僅在選定的一組不同時間提供有關物理系統狀態的信息。 4.基於傳遞函數的分析: 傳遞函數主要是微控制器在處理在機電系統中，他用於開 / 關或連續時間控制，對於連續時間情況，微控制器在每個採樣週期重新接收數據，並根據選擇的算法計算所需的動作。當使用微控制器控制實際過程時，可以採用兩種結構。在第一種結構中，輸出和參考之間的誤差是連續不斷的，然後通過模數轉換器（ A / D ）發送到微控制器，並根據所選算法計算控制動作，而在第二種結構中，輸出將通過 A / D 轉換為數字值。 (1)信號轉換在前向路徑中進行: (2)在反饋路徑中進行信號轉換: 5.基於傳遞函數的設計: 在獲得系統的數學建模後，通過定義所需的性能來開始設計過程，這將能夠確定控制器的結構及其參數；控制系統的設計通常是為了保證某些性能；考慮系統的閉環動力學，可以將這種性能概括為瞬態和穩態狀態的穩定性和行為，通過尊重給定系統的局限性，通常情況下，我們會通過尋找系統可能存在的過衝與其速度之間的折衷來尋求改善瞬態的方法，對於穩態，我們進行搜索以確保誤差小於某個選定的公差。在藉由這些條件經由上章節的傳遞函數分析進行一連串的傳遞函數設計，達到機電一體化的目的。 \n 總結: 透過此書，我們理解到機電一體化並不是那麼容易，必須先考慮機械與電子電路的設計，還須經過數學建模，完成動力學系統的作動，最後再進行傳遞函數的分析與設計，最終才能達到機電一體化。 \n MechatronicDesignCases \n 概述: \n 主要分別介紹四個機電套件 : 1.直流電動機的速度控制。 2.直流電動機的位置控制。 3.平衡裝置的控制。 4.磁懸浮系統。 直流電動機電子電路圖:  \xa0  \xa0 \xa0 \xa0  平衡裝置電子電路圖: \n 1.直流電動機的速度控制和位置控制: 大多數的電機系統都採用此類直流電動機，採用此系統首先必須考慮系統具有的理想性能 :(1) 系統穩定在閉環狀態 (2) 建立時間 t s為 2 ％等於我們可以擁有的最佳時間  (3) 超調等於 5 ％  (4) 階躍函數作為輸入的穩態等於零。然而該電動機的數據表給出了所有重要參數，因此容易獲得該執行器的傳遞函數，此傳替函數是藉由帶有刻度的小磁盤作為負載，使磁盤速度和輸入電壓之間產生傳遞函數，然而利用傳遞函數當作數據而達到控制直流電動機的速度，再藉由傳遞函數及速度控制導出的結果來控制位置。 \n 2.平衡裝置的控制: 平衡裝置是一個具有挑戰性的系統，因為它屬於一個不穩定的開環系統，平衡裝置的概念為研究目的而開發的，它能使正在學習機電一體化的學生能夠達成他們的控制算法並熟悉複雜的系統。 \n 3.磁懸浮系統: 磁懸浮系統由兩部分組成 : 一個固定的部分代表線圈並產生電磁力，另一個是通過作用於電磁場產生的電磁力而放置在某個位置的鐵磁物體，該系統的目的是通過輸入電壓調節電磁體中的電流來控制移動物體的垂直位置。使用霍爾效應傳感器測量物體位置。 dsPIC30F4011 周圍的電子電路通過一個集成電路 L298 向線圈供電，電流與致動器的指令電壓成正比。由於磁力僅具有吸引力，因此互導放大器會關閉以執行負命令。 \n 總結: 通過閱讀此書中的幾個電機套件，了解到機電一體化系統的設計和實驗的知識，在機電控制方面是非常困難的，首先要先達到套件的執行條件，再經由許多實驗導出來的公式和一些輔助裝置才能夠達成。 \n', 'tags': '', 'url': 'Topic2.html'}, {'title': 'Topic3', 'text': 'MechaFutureAndChallenges \n 概述 : 機電一體化領域最早開始於 1970 年代，當時機械系統需要更精確的受控運動。 這迫使工業界和學術界探索傳感器和電子輔助反饋，引入反饋控制的運動構成了使機械工程師和電子工程師能夠更好地協作並相互理解語言的基礎，並且採取了各種舉措來發展共同的語言或方法，然而機電一體化成為一門新興學科。 \xa0  \xa0 其中在機械工程師和電子工程師之間的溝通與資料的傳輸與物聯網有相當重要的關係 : \xa0 然而其設計方面通常遵循簡化 V 型路徑 : \n 總結: 通過閱讀此書，了解機電一體化的重要性，以及機電一體化的未來、機電一體化所要面對的挑戰，隨著時代進步，機電一體化的要求越來越高，需要解決的問題是多向性，且複雜的，在機電一體化的未來我們將面臨極大的挑戰。 \n MechaEducFutureNeed \n 概述: 此書分成兩章節，分別講述機電一體化教育的重要性及其教育方法，以及全球的趨勢與其對機電一體化的影響。 \n 機電一體化教育的重要性及其教育方法: 機電一體化能大幅地提高和改善系統的性能，在工業方面占有極大的優勢，成為現代學生必須研究的方向，而其教育方法分為 :(1) 演講 (2) 講座討論 (3) 示範 (4) 模擬 (5) 協同學習 (6) 合作學習 (7) 實例探究 (8) 角色扮演 全球的趨勢與其對機電一體化的影響: 對於全球趨勢，主要分別為 :(1) 人口變化以及老齡化社會醫療系統） (2) 流動性  (3) 全球化以及勞力、經濟、金融的變化 (4) 城市化和個性化 (5) 氣候變化和環境變化以及能源和資源、持續性 (6) 智慧型社會以及無所不在的情報、數位文化。 \xa0 \xa0這些趨勢的結果也是該技術必須向前發展，由於多種學科的結合，機電一體化產品具有很高的產品開發潛力。然而機電一體化必須考慮的眾多方面 :(1) 問題與挑戰 (2) 系統設計、建模和模擬 (3) 製造技術 (4) 物聯網和網路物理系統 (5) 通訊及訊息技術 (6) 機電一體化的教育。 機電一體化未來地圖: \n \xa0 \n', 'tags': '', 'url': 'Topic3.html'}, {'title': 'E-book translation content', 'text': '', 'tags': '', 'url': 'E-book translation content.html'}, {'title': 'CoppeliaSim User Manual', 'text': 'PDF連結: https://drive.google.com/file/d/1QQAyqm9VjunnozFMYdrV4K7ktpkjgVOu/view \n', 'tags': '', 'url': 'CoppeliaSim User Manual.html'}, {'title': 'DesignCollaborationBetterProducts', 'text': 'PDF連結: https://drive.google.com/open?id=1kvE7Hs0IS3Vl3BSNi_b9Vw2FyAuz8QIo \n', 'tags': '', 'url': 'DesignCollaborationBetterProducts.html'}, {'title': 'IndustrialAndEngineeringProductDesignCollaboration', 'text': 'PDF連結: https://drive.google.com/open?id=1rXziKtBaPWAV0jGWID44VoR8L4DC5oRL \n', 'tags': '', 'url': 'IndustrialAndEngineeringProductDesignCollaboration.html'}, {'title': 'MechanicalDesignProcess', 'text': 'PDF連結: https://drive.google.com/open?id=1iBYGVgiToxcX7ojaH_K9bcyrH0c_ZYxB \n', 'tags': '', 'url': 'MechanicalDesignProcess.html'}, {'title': 'MechaEducFutureNeed', 'text': 'PDF連結: https://drive.google.com/open?id=1krFCMcUm9fSGAvucUenGpOzQtTFRYD8G \n', 'tags': '', 'url': 'MechaEducFutureNeed.html'}, {'title': 'MechatronicDesignCases', 'text': 'PDF連結: https://drive.google.com/open?id=1rS3oOM3-4vzule-NYNHD_98Eu5vKpv98 \n', 'tags': '', 'url': 'MechatronicDesignCases.html'}, {'title': 'MechaFutureAndChallenges', 'text': 'PDF連結: https://drive.google.com/open?id=19DRKT5qFuAZg9wAsXcTMf_szifX0RWWP \n', 'tags': '', 'url': 'MechaFutureAndChallenges.html'}]};